#check whitespaces
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
	public static void main (String[] args) {
       Scanner sc=new Scanner(System.in);
	   String s=sc.nextLine();
	   int p=0;
	   for(int i=0;i<s.length();i++){
		   if(s.charAt(i)==' '){
			   p=1;
		   }
	   }

	   if(p==1){
		   System.out.println("Yes");
	   }else{
		   System.out.println("No");
	   }
	}
}
#Divisibility Test
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static void main (String[] args) {
        String s;
        Scanner sc=new Scanner(System.in);
        s=sc.nextLine();
        int n=s.length();
        if(s.charAt(n-1)!='0'){
            System.out.print("No");
            return;

        }
        int sum=0;
        for(int i=0;i<n;i++){
            sum+=(s.charAt(i));    
        }
         if(sum%3==0){
            System.out.print("Yes");
            return;
         }

            System.out.print("No");
            return;
        
                      // Your code here
    }
}
#Number of characters excluding space
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static void main (String[] args) {
                      // Your code herehere
                      Scanner sc=new Scanner(System.in);
                      String A=sc.nextLine();
                      int count=0;
                      for(int i=0;i<A.length();i++){
                          if(A.charAt(i)!=' '){
                              count++;
                          }
                      }
                      System.out.println(count);
    }
}
#Smallest String There Is
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static void main (String[] args) {
                      Scanner sc=new Scanner(System.in);
                      int n;
                      n=sc.nextInt();
                      int x=1;
                      for(int i=0;i<n;i++){
                          int y=i&x;
                          if (y==0){
                              System.out.print("a");
                          }
                          else{
                              System.out.print("b");
                          }
                      }
    }
}
#Bubble Sort (descending order)
import java.util.Scanner;
public class Main{
    public static void BubbleSort(int arr[]) {
        // Time Complexity=o(n^2)
        for (int i = 0; i < arr.length - 1; i++) {
            for (int j = 0; j < arr.length - i - 1; j++) {
                if (arr[j] < arr[j + 1]) {
                    int swap = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = swap;
                }
            }
        }

        for (int i = 0; i < arr.length; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println();
    }

    public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
        int arr[] = new int[n];

		for(int i=0;i<n;i++){
			arr[i]=sc.nextInt();
		}
        BubbleSort(arr);
        // this code contributed by Abhishek Chauhan
    }
}
#Implementing Insertion sort
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static void main (String[] args) {
              Scanner sc= new Scanner(System.in);
              int t;
              t=sc.nextInt();
              while(t-->0){
                  int size;
                  size=sc.nextInt();
                  int arr[]=new int [size];
                  for(int i=0;i<size;i++){
                      arr[i]=sc.nextInt();
                  }
                  for(int step=1;step<size; step++){
                      int key=arr[step];
                      int j= step-1;
                      while(j>=0 && key<arr[j]){
                          arr[j+1]=arr[j];
                          --j;
                      }
                      arr[j+1]=key;
                  }
                  for(int i=0;i<size; i++){
                      System.out.print(arr[i]+ " ");
                  }
                  System.out.println();
              }        
    }
}
#Bubble sort in pair array
/*
class Pair { 
    int x; 
    int y; 
  
    // Constructor 
public Pair(int x, int y) 
    { 
        this.x = x; 
        this.y = y; 
    } 
} 
*/ 
static class secondelement implements Comparator<Pair>
{
    public int compare(Pair a, Pair b){
        if(a.x==b.x){
            return b.y-a.y;

        }
        return b.x-a.x;
    }
}
static Pair[] SortPair(Pair arr[], int n)  { 
 //enter your code here
 Arrays.sort(arr, new secondelement());
 return arr;
 }
 #Number of Merge
 import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
 public class Main {
    int noOfMerge=0;
    void merge(int arr[], int l, int m, int r)
    {
        int n1= m-l+1;
        int n2= r-m;
        int L[]= new int[n1];
        int R[]= new int[n2];
        for(int i=0;i<n1; ++i)
        L[i]=arr[l+i];
        for(int j=0;j<n2;++j)
        R[j]=arr[m+1+j];
        int i=0, j=0, k=l;
        while(i<n1 && j<n2){
            if(L[i]<=R[j]){
                arr[k]=L[i];
                i++;

            }
            else{
                arr[k]=R[j];
                j++;
            }
            k++;
        }
        while(i<n1)
        {
            arr[k]=L[i];
            i++;
            k++;
        }
        while(j<n2)
        {
            arr[k]=R[j];
            j++;
            k++;
        }
    }
    void sort(int arr[],int l, int r)
    {
        if(l<r){
            int m=(l+r)/2;
            sort(arr,l,m);
            sort(arr,m+1,r);
            merge(arr,l,m,r);
            noOfMerge++;
        }
    }
    public static void main (String[] args) {
                      Scanner sc= new Scanner(System.in);
                      int n=sc.nextInt();
                      int[]array=new int[n];
                      for(int i=0;i<n;i++)
                      array[i]=sc.nextInt();
                      Main ob = new Main();
                      ob.sort(array,0,n-1);
                      for(int i=0;i<n;++i)
                      System.out.print(array[i]+ " ");
                      System.out.println();
                      System.out.println(ob.noOfMerge);
    }
}

